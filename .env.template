# ------------------ AIRFLOW ------------------
AIRFLOW_UID=                             # UID пользователя хоста для прав на volume (например, 50000)
AIRFLOW_IMAGE_NAME=                      # Docker-образ Airflow (например, apache/airflow:2.8.3)
AIRFLOW_PROJ_DIR=                        # Корень проекта внутри контейнера (обычно .)
AIRFLOW__CORE__EXECUTOR=                 # Executor: CeleryExecutor / LocalExecutor / KubernetesExecutor
AIRFLOW__CORE__FERNET_KEY=               # Ключ шифрования (сгенерируй: `openssl rand -base64 32`)
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=   # true/false — пауза DAG'ов при создании
AIRFLOW__CORE__LOAD_EXAMPLES=            # true/false — загружать демо-DAG'и
AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK= # true/false — healthcheck планировщика
AIRFLOW__API__AUTH_BACKENDS=             # Бэкенды авторизации API (напр., basic_auth, session)
_AIRFLOW_WWW_USER_USERNAME=              # Логин админа Airflow UI (dev)
_AIRFLOW_WWW_USER_PASSWORD=              # Пароль админа Airflow UI (dev)
_AIRFLOW_DB_MIGRATE=                     # true/false — выполнять миграции БД Airflow при старте
_AIRFLOW_WWW_USER_CREATE=                # true/false — создавать админа при старте
_PIP_ADDITIONAL_REQUIREMENTS=            # Доп. пакеты через пробел (напр., pandas faker kafka-python ...)

# ------------------ PostgreSQL ------------------
POSTGRES_USER=                           # Пользователь DWH/RAW/DDS (напр., airflow)
POSTGRES_PASSWORD=                       # Пароль пользователя Postgres
POSTGRES_DB=                             # Имя БД DWH (напр., dwh)
POSTGRES_HOST=                           # Хост/сервис Postgres (напр., postgres)

# ------------------ MinIO ------------------
MINIO_ENDPOINT=                          # Хост:порт MinIO (напр., minio:9000)
MINIO_ROOT_USER=                         # Access key
MINIO_ROOT_PASSWORD=                     # Secret key
MINIO_BUCKET=                            # Бакет по умолчанию (напр., events)
MINIO_USE_SSL=                           # True/False — использовать HTTPS

# ------------------ Neo4j ------------------
NEO4J_URI=                               # bolt://host:7687 (напр., bolt://neo4j:7687)
NEO4J_USER=                              # Логин Neo4j
NEO4J_PASSWORD=                          # Пароль Neo4j

# ------------------ ClickHouse ------------------
CLICKHOUSE_HOST=                         # Хост ClickHouse (напр., clickhouse)
CLICKHOUSE_PORT=                         # Порт TCP (напр., 9000)
CLICKHOUSE_USER=                         # Пользователь CH (напр., airflow)
CLICKHOUSE_PASSWORD=                     # Пароль CH
CLICKHOUSE_DB=                           # Целевая БД (напр., data_mart)

# ------------------ Kafka ------------------
KAFKA_BOOTSTRAP_SERVERS=                 # Список брокеров: host:port[,host2:port2] (напр., kafka:9092)

# ------------------ MetaBase ------------------
MB_DB_FILE=                              # Путь к H2 файлу (dev), напр., /metabase-data/metabase.db
# (опционально — для внешнего Postgres вместо H2)
# MB_DB_TYPE=postgres
# MB_DB_DBNAME=
# MB_DB_PORT=
# MB_DB_USER=
# MB_DB_PASS=
# MB_DB_HOST=

# ------------------ Директории с артефактами ------------------
SQL_DIR=                                  # Куда монтируются SQL (напр., /opt/airflow/sql)
CYPHER_DIR=                               # Куда монтируются Cypher (напр., /opt/airflow/cypher)

# ------------------ Telegram (уведомления) ------------------
TELEGRAM_CHAT_ID=                         # ID чата/канала (например, -100xxxxxxxxxx)
TELEGRAM_TOKEN=                           # Токен бота @BotFather
